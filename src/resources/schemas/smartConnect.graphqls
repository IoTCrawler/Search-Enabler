scalar Object

schema {
    query: Query

}

type Query {
    temperatureSensors(isHostedBy: PlatformInput, observes: ObservablePropertyInput, offset: Int = 0, limit: Int = 0): [TemperatureSensor]
    indoorTemperatureSensors(isHostedBy: PlatformInput, observes: ObservablePropertyInput, offset: Int = 0, limit: Int = 0): [IndoorTemperatureSensor]
    smartPlugs(id: String, hosts: SensorInput, location: String, observes: ObservablePropertyInput, offset: Int = 0, limit: Int = 0): [SmartPlug]
}

type TemperatureSensor @resource(class : "http://Agt/TemperatureSensor", subClassOf: ["Sensor"]){

}

type IndoorTemperatureSensor @resource(class : "http://Agt/IndoorTemperatureSensor", subClassOf: ["TemperatureSensor"]){

}

type SmartPlug @resource(class : "http://www.agtinternational.com/ontologies/devices#SmartPlug", subClassOf: ["Platform"]){
    location: String  @attribute(uri : "http://schema.org/location")
    observesEntity: String  @attribute(uri : "http://www.agtinternational.com/ontologies/IoTDeviceModel#observesEntity")

}

type FibaroWallPlug @resource(class : "http://www.agtinternational.com/ontologies/devices#FibaroWallPlug", subClassOf: ["SmartPlug"]){
    observesEntity: String  @attribute(uri : "http://www.agtinternational.com/ontologies/IoTDeviceModel#observesEntity")
}

type FibaroWallPlug_FGWP102 @resource(class : "http://www.agtinternational.com/ontologies/devices#FibaroWallPlug_FGWP102", subClassOf: ["SmartPlug"]){
    observesEntity: String  @attribute(uri : "http://www.agtinternational.com/ontologies/IoTDeviceModel#observesEntity")
}
